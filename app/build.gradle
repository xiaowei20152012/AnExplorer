apply plugin: 'com.android.application'

def props = new Properties()
props.load(new FileInputStream(rootProject.file("keystore.properties")))

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${parent.name}-${variant.name}-${variant.versionName}.apk"
        }
    }

    defaultConfig {
        versionName "3.8"
        versionCode = 62
        minSdkVersion 17
        targetSdkVersion 25
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
//        buildConfigField "String", "LICENSE_KEY",  "$props.LICENSE_KEY"
//        buildConfigField "String", "DROPBOX_CLIENT_ID",  "$props.DROPBOX_CLIENT_ID"
//        buildConfigField "String", "DROPBOX_CLIENT_KEY",  "$props.DROPBOX_CLIENT_KEY"
//        buildConfigField "String", "ONEDRIVE_CLIENT_ID",  "$props.ONEDRIVE_CLIENT_ID"
//        buildConfigField "String", "ONEDRIVE_CLIENT_KEY",  "$props.ONEDRIVE_CLIENT_KEY"
//        buildConfigField "String", "BOX_CLIENT_ID",  "$props.BOX_CLIENT_ID"
//        buildConfigField "String", "BOX_CLIENT_KEY",  "$props.BOX_CLIENT_KEY"
//        buildConfigField "String", "PLAYSTORE_LICENSE_KEY",  "$props.PLAYSTORE_LICENSE_KEY"
//        buildConfigField "String", "MERCHANT_ID",  "$props.MERCHANT_ID"
    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard/proguard-project.pro',
                    'proguard/proguard-google-play-services.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard/proguard-project.pro',
                    'proguard/proguard-google-play-services.pro'
        }
    }
    flavorDimensions "release", "default"
    productFlavors {
        free {
            applicationId "com.fast.explorer"
            dimension "default"
//            buildConfigField "String", "GOOGLE_DRIVE_CLIENT_ID",  "$props.GOOGLE_DRIVE_CLIENT_ID"
        }
        pro {
            applicationId "com.fast.explorer.pro"
            dimension "default"
//            buildConfigField "String", "GOOGLE_DRIVE_CLIENT_ID",  "$props.GOOGLE_DRIVE_PRO_CLIENT_ID"
        }
        underground {
            applicationId "com.fast.explorer.underground"
            dimension "default"
        }
        google {
            dimension "release"
        }
        amazon {
            dimension "release"
        }
        other {
            dimension "release"
        }
    }
    variantFilter { variant ->
        def names = variant.flavors*.name

        if (names.contains("underground") && (names.contains("google") || names.contains("other"))) {
            variant.ignore = true
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {
        abortOnError false
    }
    aaptOptions {
        noCompress 'apk'
    }
}

ext {
    supportLibVersion = '27.1.0'
    gmsVersion = '12.0.1'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.jaredrummler:android-processes:+'
    implementation 'com.github.mjdev:libaums:+'
    implementation 'org.apache.ftpserver:ftpserver-core:+'
    implementation 'commons-net:commons-net:+'
    implementation 'com.zsoltsafrany:needle:1.0.0'
    implementation 'com.cloudrail:cloudrail-si-android:2.21.6'
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:exifinterface:${supportLibVersion}"
    implementation "com.github.javiersantos:AppUpdater:2.6.5"
    freeImplementation 'com.crashlytics.sdk.android:crashlytics:2.9.1'
    freeImplementation "com.google.firebase:firebase-ads:${gmsVersion}"
    freeImplementation 'com.anjlab.android.iab.v3:library:1.0.44'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:+'
}


//android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
//android.signingConfigs.release.storePassword props.keyStorePassword
//android.signingConfigs.release.keyAlias props.keyAlias
//android.signingConfigs.release.keyPassword props.keyAliasPassword

if (getGradle().getStartParameter().getTaskRequests().toString().contains("Free")) {
    apply plugin: 'com.google.gms.google-services'
    apply plugin: 'io.fabric'
}
